{"version":3,"names":["IrButton","connectedCallback","disconnectedCallback","render","block","this","btn_block","h","onClick","clickHanlder","emit","class","btn_color","size","textSize","type","btn_type","icon","text","irModalCss","IrModal","closeModal","isOpen","openModal","btnClickHandler","event","target","name","leftBtnText","confirmModal","item","rightBtnText","cancelModal","modal","fade","show","tabindex","style","display","btnPosition","leftBtnActive","leftBtnColor","rightBtnActive","rightBtnColor"],"sources":["src/components/ir-button/ir-button.tsx","src/components/ir-modal/ir-modal.css?tag=ir-modal","src/components/ir-modal/ir-modal.tsx"],"sourcesContent":["import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-button',\n})\nexport class IrButton {\n  @Prop() name: string;\n  @Prop() text;\n  @Prop() icon = 'ft-save';\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\n  @Prop() btn_block = true;\n  @Prop() btn_disabled = false;\n  @Prop() btn_type = 'button';\n\n  connectedCallback() {}\n  disconnectedCallback() {}\n  @Event({ bubbles: true, composed: true }) clickHanlder: EventEmitter<any>;\n\n  render() {\n    let block = '';\n    if (this.btn_block) {\n      block = 'btn-block';\n    }\n    return (\n      <button\n        onClick={() => {\n          this.clickHanlder.emit();\n        }}\n        class={`btn btn-${this.btn_color} btn-${this.size} text-${this.textSize} ${block}`}\n        type={this.btn_type}\n      >\n        <i class={this.icon}></i>&nbsp;{this.text}\n      </button>\n    );\n  }\n}\n",".modal-header {\r\n  border: none !important;\r\n}\r\n\r\n.modal-footer {\r\n  border: none !important;\r\n}\r\n\r\n.backdropModal {\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1000;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  pointer-events: none;\r\n}\r\n.backdropModal.active {\r\n  opacity: 1 !important;\r\n  pointer-events: all;\r\n}\r\n.modal {\r\n  z-index: 1001 !important;\r\n}\r\n","import { Component, h, State, Method, Event, EventEmitter, Prop, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ir-modal',\n  styleUrl: 'ir-modal.css',\n})\nexport class IrModal {\n  @Prop() rightBtnActive: boolean = true;\n  @Prop() leftBtnActive: boolean = true;\n\n  @Prop() rightBtnText: string = 'Close';\n  @Prop() leftBtnText: string = 'Confirm';\n\n  @Prop() rightBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\n  @Prop() leftBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'secondary';\n\n  @Prop() btnPosition: 'left' | 'right' | 'center' = 'right';\n\n  @State() isOpen: boolean = false;\n\n  @Method()\n  async closeModal() {\n    this.isOpen = false;\n  }\n  @Method()\n  async openModal() {\n    this.isOpen = true;\n  }\n  @Event({ bubbles: true, composed: true }) confirmModal: EventEmitter<any>;\n  @Event({ bubbles: true, composed: true }) cancelModal: EventEmitter<any>;\n\n  @Listen('clickHanlder')\n  btnClickHandler(event: CustomEvent) {\n    let target = event.target as HTMLInputElement;\n    let name = target.name;\n\n    if (name === this.leftBtnText) {\n      this.confirmModal.emit(this.item);\n    } else if (name === this.rightBtnText) {\n      this.cancelModal.emit();\n      this.closeModal();\n    }\n  }\n\n  @Prop({ reflect: true }) item: any = {};\n\n  render() {\n    return [\n      <div\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\n        onClick={() => {\n          this.closeModal();\n        }}\n      ></div>,\n      <div class={{ modal: true, fade: true, show: this.isOpen }} tabindex=\"-1\" style={{ display: this.isOpen ? 'block' : 'none' }}>\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <slot></slot>\n            </div>\n            <div class={`modal-footer d-flex justify-content-${this.btnPosition === 'center' ? 'center' : this.btnPosition === 'left' ? 'start' : 'end'}`}>\n              {this.leftBtnActive && <ir-button icon={''} btn_color={this.leftBtnColor} btn_block text={this.leftBtnText} name={this.leftBtnText}></ir-button>}\n              {this.rightBtnActive && <ir-button icon={''} btn_color={this.rightBtnColor} btn_block text={this.rightBtnText} name={this.rightBtnText}></ir-button>}\n            </div>\n          </div>\n        </div>\n      </div>,\n    ];\n  }\n}\n"],"mappings":"wDAKaA,EAAQ,M,sHAGJ,U,eAC6F,U,UACzE,K,cACI,K,eACnB,K,kBACG,M,cACJ,Q,CAEnB,iBAAAC,GAAiB,CACjB,oBAAAC,GAAoB,CAGpB,MAAAC,GACE,IAAIC,EAAQ,GACZ,GAAIC,KAAKC,UAAW,CAClBF,EAAQ,W,CAEV,OACEG,EAAA,UACEC,QAAS,KACPH,KAAKI,aAAaC,MAAM,EAE1BC,MAAO,WAAWN,KAAKO,iBAAiBP,KAAKQ,aAAaR,KAAKS,YAAYV,IAC3EW,KAAMV,KAAKW,UAEXT,EAAA,KAAGI,MAAON,KAAKY,OAAU,IAAOZ,KAAKa,K,GCjC7C,MAAMC,EAAa,+W,MCMNC,EAAO,M,iIACgB,K,mBACD,K,kBAEF,Q,iBACD,U,mBAEkF,U,kBACD,Y,iBAE5D,Q,YAExB,M,UA0BU,E,CAvBrC,gBAAMC,GACJhB,KAAKiB,OAAS,K,CAGhB,eAAMC,GACJlB,KAAKiB,OAAS,I,CAMhB,eAAAE,CAAgBC,GACd,IAAIC,EAASD,EAAMC,OACnB,IAAIC,EAAOD,EAAOC,KAElB,GAAIA,IAAStB,KAAKuB,YAAa,CAC7BvB,KAAKwB,aAAanB,KAAKL,KAAKyB,K,MACvB,GAAIH,IAAStB,KAAK0B,aAAc,CACrC1B,KAAK2B,YAAYtB,OACjBL,KAAKgB,Y,EAMT,MAAAlB,GACE,MAAO,CACLI,EAAA,OACEI,MAAO,iBAAiBN,KAAKiB,OAAS,SAAW,KACjDd,QAAS,KACPH,KAAKgB,YAAY,IAGrBd,EAAA,OAAKI,MAAO,CAAEsB,MAAO,KAAMC,KAAM,KAAMC,KAAM9B,KAAKiB,QAAUc,SAAS,KAAKC,MAAO,CAAEC,QAASjC,KAAKiB,OAAS,QAAU,SAClHf,EAAA,OAAKI,MAAM,gBACTJ,EAAA,OAAKI,MAAM,iBACTJ,EAAA,OAAKI,MAAM,cACTJ,EAAA,cAEFA,EAAA,OAAKI,MAAO,uCAAuCN,KAAKkC,cAAgB,SAAW,SAAWlC,KAAKkC,cAAgB,OAAS,QAAU,SACnIlC,KAAKmC,eAAiBjC,EAAA,aAAWU,KAAM,GAAIL,UAAWP,KAAKoC,aAAcnC,UAAS,KAACY,KAAMb,KAAKuB,YAAaD,KAAMtB,KAAKuB,cACtHvB,KAAKqC,gBAAkBnC,EAAA,aAAWU,KAAM,GAAIL,UAAWP,KAAKsC,cAAerC,UAAS,KAACY,KAAMb,KAAK0B,aAAcJ,KAAMtB,KAAK0B,mB"}